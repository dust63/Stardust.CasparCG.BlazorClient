@inject IStringLocalizer<App> local
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@using System.Globalization
@inherits FeedbackComponent<ScheduledRecord>

<Form Model="@_model"
      Layout="@FormLayout.Vertical"
      OnFinish="OnFinish"
      OnFinishFailed="OnFinishFailed">
    <Tabs DefaultActiveKey="1">
        <TabPane Key="1">
            <Tab>Schedule Information</Tab>
            <ChildContent>
                <Row Gutter="16">
                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 24}"
                                   Lg="new EmbeddedProperty{Span = 24}"
                                   Md="new EmbeddedProperty{Span = 24}"
                                   Sm="12">
                        <FormItem Label="@local["Title"]">
                            <Input @bind-Value="@context.Title" Placeholder="@local["TitlePlaceholder"]" />
                        </FormItem>
                    </AntDesign.Col>
                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 24}"
                                   Lg="new EmbeddedProperty { Span = 24 }"
                                   Md="new EmbeddedProperty{Span = 24}"
                                   Sm="12">
                        <FormItem Label="@local["Description"]">
                            <Input @bind-Value="@context.Description" Placeholder="@local["DescriptionPlaceholder"]" />
                        </FormItem>
                    </AntDesign.Col>

                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 24}"
                                   Lg="new EmbeddedProperty { Span = 24 }"
                                   Md="new EmbeddedProperty{Span = 24}"
                                   Sm="12">
                        <FormItem Label="@local["ProgramMode"]">
                            <RadioGroup @bind-Value="@context.Mode" ButtonStyle="solid">
                                <Radio RadioButton Value="@(ScheduledRecord.ProgramMode.Normal)">Normal</Radio>
                                <Radio RadioButton Value="@(ScheduledRecord.ProgramMode.Daily)">Daily</Radio>
                                <Radio RadioButton Value="@(ScheduledRecord.ProgramMode.Weekly)">Weekly</Radio>
                            </RadioGroup>
                        </FormItem>
                    </AntDesign.Col>

                    @switch (context.Mode)
                    {
                        case ScheduledRecord.ProgramMode.Normal:
                            <AntDesign.Col Xl="new EmbeddedProperty{Span = 24}"
                                           Lg="new EmbeddedProperty { Span = 24 }"
                                           Md="new EmbeddedProperty{Span = 24}"
                                           Sm="24">
                                <FormItem Label="@local["Date"]">
                                    <DatePicker @bind-Value="@DateStart" ShowTime="@false" DefaultValue="DateTime.Now.AddMinutes(5)" />
                                </FormItem>
                            </AntDesign.Col>

                            break;
                        case ScheduledRecord.ProgramMode.Daily:

                            break;
                        case ScheduledRecord.ProgramMode.Weekly:
                            <AntDesign.Col Xl="new EmbeddedProperty{Span = 24}"
                                           Lg="new EmbeddedProperty { Span = 24 }"
                                           Md="new EmbeddedProperty{Span = 24}"
                                           Sm="12">
                                <FormItem Label="@local["ChooseADay"]">
                                    <RadioGroup @bind-Value="@context.DayOfWeek" ButtonStyle="solid">
                                        <Radio RadioButton Value="@(DayOfWeek.Monday)">@_dayNames[(int)DayOfWeek.Monday]</Radio>
                                        <Radio RadioButton Value="@(DayOfWeek.Tuesday)">@_dayNames[(int)DayOfWeek.Tuesday]</Radio>
                                        <Radio RadioButton Value="@(DayOfWeek.Wednesday)">@_dayNames[(int)DayOfWeek.Wednesday]</Radio>
                                        <Radio RadioButton Value="@(DayOfWeek.Thursday)">@_dayNames[(int)DayOfWeek.Thursday]</Radio>
                                        <Radio RadioButton Value="@(DayOfWeek.Friday)">@_dayNames[(int)DayOfWeek.Friday]</Radio>
                                        <Radio RadioButton Value="@(DayOfWeek.Saturday)">@_dayNames[(int)DayOfWeek.Saturday]</Radio>
                                        <Radio RadioButton Value="@(DayOfWeek.Sunday)">@_dayNames[(int)DayOfWeek.Sunday]</Radio>
                                    </RadioGroup>
                                </FormItem>
                            </AntDesign.Col>


                            break;
                    }

                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 12}"
                                   Lg="new EmbeddedProperty { Span = 12 }"
                                   Md="new EmbeddedProperty{Span = 12}"
                                   Sm="12">
                        <FormItem Label="@local["StartTime"]">
                            <TimePicker @bind-Value="@context.StartTime" Format="@("hh:mm")" DefaultValue="DateTime.Now.AddMinutes(5)" />
                        </FormItem>
                    </AntDesign.Col>

                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 12}"
                                   Lg="new EmbeddedProperty { Span = 12 }"
                                   Md="new EmbeddedProperty{Span = 12}"
                                   Sm="12">
                        <FormItem Label="@local["EndTime"]">
                            <TimePicker @bind-Value="@context.EndTime" Format="@("hh:mm")" DefaultValue="DateTime.Now.AddMinutes(15)" />
                        </FormItem>
                    </AntDesign.Col>


                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 24}"
                                   Lg="new EmbeddedProperty { Span = 24 }"
                                   Md="new EmbeddedProperty{Span = 24}"
                                   Sm="12">
                        <FormItem Label="@local["Filename"]">
                            <Input @bind-Value="@context.Filename" Placeholder="@local["FilenamePlaceholder"]" />
                        </FormItem>
                    </AntDesign.Col>


                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 12}"
                                   Lg="new EmbeddedProperty { Span = 12 }"
                                   Md="new EmbeddedProperty{Span = 12}"
                                   Sm="12">
                        <label class="ant-form-item-label">@local["Tags"]</label>
                        <TagsEditor Tags="@context.YoutubeTags" />
                    </AntDesign.Col>
                </Row>
            </ChildContent>
        </TabPane>
        <TabPane Key="2">
            <Tab>Video options</Tab>
            <ChildContent>
                <Row Gutter="16">
                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 24}"
                                   Lg="new EmbeddedProperty { Span = 24 }"
                                   Md="new EmbeddedProperty{Span = 24}"
                                   Sm="12">
                        <FormItem Label="@local["Logo"].Value">
                            <Select @bind-Value="@context.Logo"
                                    TItemValue="string"
                                    TItem="string">
                                <SelectOptions>
                                    @foreach (var logo in Logos)
                                    {
                                        <SelectOption TItemValue="string" TItem="string" Value="@(logo)" Label="@(logo)" />

                                    }
                                </SelectOptions>
                            </Select>
                        </FormItem>
                    </AntDesign.Col>

                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 12}"
                                   Lg="new EmbeddedProperty { Span = 12 }"
                                   Md="new EmbeddedProperty{Span = 12}"
                                   Sm="12">
                        <FormItem Label="@local["OpenCredits"].Value">
                            <Select @bind-Value="@context.OpenCreditMovie"
                                    TItemValue="string"
                                    TItem="string">
                                <SelectOptions>
                                    @foreach (var movie in Movies)
                                    {
                                        <SelectOption TItemValue="string" TItem="string" Value="@(movie)" Label="@(movie)"  />

                                    }
                                </SelectOptions>
                            </Select>
                        </FormItem>
                    </AntDesign.Col>

                    <AntDesign.Col Xl="new EmbeddedProperty{Span = 12}"
                                   Lg="new EmbeddedProperty { Span = 12 }"
                                   Md="new EmbeddedProperty{Span = 12}"
                                   Sm="12">
                        <FormItem Label="@local["EndCredits"].Value">
                            <Select @bind-Value="@context.EndCreditMovie"
                                    TItemValue="string"
                                    TItem="string">
                                <SelectOptions>
                                    @foreach (var movie in Movies)
                                    {
                                        <SelectOption TItemValue="string" TItem="string" Value="@(movie)" Label="@(movie)" />

                                    }
                                </SelectOptions>
                            </Select>
                        </FormItem>
                    </AntDesign.Col>
                    </Row>
            </ChildContent>
        </TabPane>
    </Tabs>
</Form>

@code {

    string _selectedLogo;
    public string[] Logos = new[] { "Logo 1", "Logo 2" };
    public string[] Movies = new[] { "Movie 1", "Movie 2" };
    public DateTime?[] DateRange { get; set; }
    private string[] _dayNames { get; set; }
    private DateTime _dateStart;


    public DateTime DateStart
    {
        get => _dateStart;
        set
        {
            _dateStart = new DateTime(value.Year, value.Month, value.Day, _model.StartTime.Hour, _model.StartTime.Minute, _model.StartTime.Second);
            _model.StartTime = _dateStart;
        }
    }

    private ScheduledRecord _model;
    protected override void OnInitialized()
    {


        _model = base.Options;
        DateStart = _model.StartTime;
        var format = CultureInfo.CurrentCulture.DateTimeFormat;
        _dayNames = format.DayNames.Select(x => x.Substring(0, 2).ToUpper()).ToArray();
        base.OnInitialized();
    }






    private void OnFinish(EditContext editContext)
    {
        _ = base.FeedbackRef.CloseAsync();
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(_model)}");
    }

    private void OnTimeRangeChange(DateRangeChangedEventArgs args)
    {
        _model.StartTime = args.Dates.FirstOrDefault() ?? default(DateTime);

        _model.EndTime = args.Dates.LastOrDefault() ?? default(DateTime);
    }




}
